{"version":3,"sources":["constants/style.js","utills.js","WebAPI.js","redux/reducers/userReducer.js","components/Header.js","redux/reducers/postsReducer.js","components/Intro.js","components/Home.js","pages/Home/HomePage.js","components/About.js","pages/About/AboutPage.js","constants/errorMessage.js","components/Login.js","pages/Login/LoginPage.js","pages/Register/RegisterPage.js","components/NewPost.js","pages/NewPost/NewPostPage.js","pages/Post/PostPage.js","components/Pagination.js","pages/Archive/ArchivePage.js","components/App.js","redux/store.js","index.js"],"names":["MEDIA_QUERY_MD","MEDIA_QUERY_LG","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","timeConverter","timestamp","date","Date","getMonth","getDate","getFullYear","BASE_URL","getUserPosts","userId","fetch","then","res","json","userReducer","createSlice","name","initialState","isLogin","userInfo","reducers","setIsLogin","state","action","payload","setUser","actions","setLoginInfo","dispatch","headers","authorization","getUserInfo","ok","data","setLogin","username","password","method","body","JSON","stringify","login","setRegister","nickname","register","Nav","styled","div","BlogLogo","Wrapper","NavItem","Link","props","$active","BtnLogin","BtnLogout","button","BtnPost","Header","location","useLocation","useDispatch","useSelector","store","user","isPosting","pathname","indexOf","to","onClick","postsReducer","allPosts","recentPost","relatedPosts","userPostsData","setRecentPost","setRelatedPosts","setAllPosts","setUserPostData","getPosts","posts","getRecentPost","id","getPostInfo","postInfo","clearPostPage","createNewPost","title","content","addNewPost","setPostDeleted","status","deletePost","statusCode","setPostEdited","newTitle","newContent","editPostById","IntroWrapper","IntroBadge","h5","AuthorName","AuthorDesc","p","AvatarWrapper","Intro","src","alt","href","PostWrapper","PostInfoTitleWrapper","PostTitle","RelatedPostTitle","PostContent","PostInfoTitle","h2","PostAuthor","PostBody","PostDate","BtnReadMore","RelatedPostWrapper","RelatedPostNum","span","ArchiveContent","RelatedTitle","h4","ArchiveTitle","h3","HomePageRoot","HomeWrapper","RelatedWrapper","BtnDelete","BtnEdit","Post","post","createdAt","PostInfo","handleDeletePost","RelatedPost","order","ArchiveItem","HomePage","useEffect","map","AboutWrapper","AboutBadge","AboutTitle","AboutDesc","AboutAvatarWrapper","AboutPage","ERRMESSAGE","BLANK_ARTICLE","BLANK_USER_INFO","LoginPageRoot","LoginTitle","LoginDesc","LoginWrapper","LoginInputHint","h6","verify","LoginInput","input","ErrorMessage","BtnBackToHome","LoginPage","useState","setUsername","setPassword","isClicked","setClicked","errorMessage","setErrorMessage","history","useHistory","push","handleInputChange","e","target","value","type","onChange","message","RegisterPage","setNickname","readonly","NewPostForm","form","NewPostWrapper","InputPostTitle","InputPostContent","textarea","BtnPublish","NewPostPage","slug","useParams","console","log","setTitle","setContent","onSubmit","preventDefault","placeholder","rows","cols","PostPage","postId","Number","filter","length","index","PaginationWrapper","CurrentPage","ArrowWrapper","Pagination","current","total","handleChangePage","ArchivePage","archivePosts","userPosts","userData","author","currentPage","setCurrentPage","totalPage","setTotalPage","recentPosts","setRecentPosts","reverse","postsNum","quotient","Math","ceil","slice","page","App","exact","path","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81613419.chunk.js","sourcesContent":["export const MEDIA_QUERY_MD = \"@media (max-width: 576px)\";\nexport const MEDIA_QUERY_LG = \"@media (max-width: 768px)\";\n","const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n\nexport function timeConverter(timestamp) {\n  let date = new Date(timestamp);\n  let months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  return (\n    months[date.getMonth()] + \" \" + date.getDate() + \", \" + date.getFullYear()\n  );\n}\n","import { getAuthToken } from \"./utills\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getAllPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getPostInfo = (id) => {\n  return fetch(`${BASE_URL}/posts?id=${id}&_expand=user`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getUserPosts = (userId) => {\n  return fetch(`${BASE_URL}/users/${userId}?_embed=posts`).then((res) =>\n    res.json()\n  );\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname: nickname,\n      username: username,\n      password: password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getUserInfo = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const addNewPost = (title, content) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title: title,\n      body: content,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const deletePost = (id) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.status);\n};\n\nexport const editPostById = (id, newTitle, newContent) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title: newTitle,\n      body: newContent,\n    }),\n  }).then((res) => res.json());\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getUserInfo, login, register } from \"../../WebAPI\";\nimport { getAuthToken, setAuthToken } from \"../../utills\";\n\nexport const userReducer = createSlice({\n  name: \"user\",\n  initialState: {\n    isLogin: false,\n    userInfo: null,\n  },\n\n  reducers: {\n    setIsLogin: (state, action) => {\n      state.isLogin = action.payload;\n    },\n\n    setUser: (state, action) => {\n      state.userInfo = action.payload;\n    },\n  },\n});\n\nexport const { setIsLogin, setUser } = userReducer.actions;\n\nexport const setLoginInfo = () => (dispatch) => {\n  return getUserInfo().then((res) => {\n    if (res.ok) {\n      dispatch(setUser(res.data));\n      dispatch(setIsLogin(true));\n    } else {\n      setAuthToken(null);\n    }\n    return res;\n  });\n};\n\nexport const setLogin = (username, password) => (dispatch) => {\n  return login(username, password).then((res) => {\n    if (res.ok) {\n      setAuthToken(res.token);\n    }\n    return res;\n  });\n};\n\nexport const setRegister = (nickname, username, password) => (dispatch) => {\n  return register(nickname, username, password).then((res) => {\n    if (res.ok) {\n      setAuthToken(res.token);\n    }\n    return res;\n  });\n};\n\nexport const setLoginOut = () => (dispatch) => {\n  dispatch(setIsLogin(false));\n  dispatch(setUser(null));\n  setAuthToken(null);\n};\n\nexport default userReducer.reducer;\n","import styled from \"styled-components\";\nimport { MEDIA_QUERY_MD } from \"../constants/style\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { setLoginOut } from \"../redux/reducers/userReducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Nav = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #eeeeee;\n  padding: 20px;\n\n  ${MEDIA_QUERY_MD} {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst BlogLogo = styled.div`\n  margin: 0 30px;\n  color: #222222;\n  font-size: 28px;\n  font-weight: bold;\n  font-family: \"Archivo Black\", sans-serif;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst NavItem = styled(Link)`\n  color: #d1d1d1;\n  text-decoration: none;\n  padding: 10px;\n\n  &:hover {\n    color: #222222;\n    filter: brightness(1.05);\n  }\n\n  ${(props) => props.$active && \"color: #222222;\"};\n`;\n\nconst BtnLogin = styled(Link)`\n  margin: 0 10px;\n  border-radius: 4px;\n  padding: 8px 15px;\n  background: #212121;\n  color: white;\n  transition: all 0.3s ease-in;\n  text-decoration: none;\n\n  &:hover {\n    background: #414141;\n  }\n`;\nconst BtnLogout = styled.button`\n  background: #212121;\n  color: white;\n  padding: 8px 15px;\n  border-radius: 4px;\n  transition: all 0.2s ease-in;\n  cursor: pointer;\n\n  &:hover {\n    background: #414141;\n  }\n`;\n\nconst BtnPost = styled(BtnLogin)`\n  box-sizing: border-box;\n  background: white;\n  border: 1px solid #212121;\n  color: #212121;\n\n  &:hover {\n    background: #eeeeee;\n    border-color: white;\n  }\n`;\n\nexport default function Header() {\n  let location = useLocation();\n  const dispatch = useDispatch();\n  const isLogin = useSelector((store) => store.user.isLogin);\n  const isPosting = location.pathname.indexOf(\"/post\") === 0 ? true : false;\n  const handleLogout = () => {\n    dispatch(setLoginOut());\n  };\n\n  return (\n    <Nav>\n      <Wrapper>\n        <BlogLogo>LIDEMY</BlogLogo>\n        <NavItem to=\"/\" $active={location.pathname === \"/\"}>\n          Home\n        </NavItem>\n        <NavItem to=\"/archive\" $active={location.pathname === \"/archive\"}>\n          Archive\n        </NavItem>\n        <NavItem to=\"/about\" $active={location.pathname === \"/about\"}>\n          About\n        </NavItem>\n      </Wrapper>\n      <div>\n        {!isLogin && <BtnLogin to=\"/register\">Sign up</BtnLogin>}\n        {!isLogin && <BtnLogin to=\"/login\">Log in</BtnLogin>}\n        {isLogin && !isPosting && (\n          <BtnLogout onClick={handleLogout}>Sign out</BtnLogout>\n        )}\n        {isLogin && !isPosting && <BtnPost to=\"/post\">New Post</BtnPost>}\n      </div>\n    </Nav>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  getAllPosts,\n  getPostInfo,\n  getUserPosts,\n  addNewPost,\n  editPostById,\n  deletePost,\n} from \"../../WebAPI\";\n\nexport const postsReducer = createSlice({\n  name: \"posts\",\n  initialState: {\n    allPosts: null,\n    recentPost: null,\n    relatedPosts: null,\n    userPostsData: null,\n  },\n\n  reducers: {\n    setRecentPost: (state, action) => {\n      state.recentPost = action.payload;\n    },\n\n    setRelatedPosts: (state, action) => {\n      state.relatedPosts = action.payload;\n    },\n\n    setAllPosts: (state, action) => {\n      state.allPosts = action.payload;\n    },\n\n    setUserPostData: (state, action) => {\n      state.userPostsData = action.payload;\n    },\n  },\n});\n\nexport const {\n  setRecentPost,\n  setRelatedPosts,\n  setAllPosts,\n  setUserPostData,\n} = postsReducer.actions;\n\nexport const getPosts = () => (dispatch) => {\n  getAllPosts().then((posts) => {\n    dispatch(setAllPosts(posts));\n  });\n};\n\nexport const getRecentPost = (id) => (dispatch) => {\n  getPostInfo(id).then((postInfo) => {\n    dispatch(setRecentPost(postInfo[0]));\n  });\n};\n\nexport const clearPostPage = () => (dispatch) => {\n  dispatch(setRecentPost(null));\n  dispatch(setRelatedPosts(null));\n};\n\nexport const getRelatedPosts = (userId, postId) => (dispatch) => {\n  getUserPosts(userId).then((res) => {\n    if (res.id) {\n      const allPosts = res.posts.filter((post) => post.id !== postId);\n      if (allPosts.length > 0) {\n        dispatch(setRelatedPosts(allPosts.filter((post, index) => index < 3)));\n      }\n    }\n  });\n};\n\nexport const getUserPostsById = (userId) => (dispatch) => {\n  getUserPosts(userId).then((res) => {\n    if (res.posts.length > 0) {\n      const posts = res.posts.reverse();\n      const nickname = res.nickname;\n      const postsNum = posts.length;\n      dispatch(\n        setUserPostData({\n          posts: posts,\n          author: {\n            nickname,\n            postsNum,\n          },\n        })\n      );\n    }\n  });\n};\n\nexport const createNewPost = (title, content) => (dispatch) => {\n  return addNewPost(title, content).then((res) => {\n    return res;\n  });\n};\n\nexport const setPostDeleted = (id) => (dispatch) => {\n  return deletePost(id).then((statusCode) => {\n    return statusCode;\n  });\n};\n\nexport const setPostEdited = (id, newTitle, newContent) => (dispatch) => {\n  return editPostById(id, newTitle, newContent).then((res) => {\n    return res;\n  });\n};\n\nexport default postsReducer.reducer;\n","import styled from \"styled-components\";\nimport { MEDIA_QUERY_LG } from \"../constants/style\";\n\nconst IntroWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  position: fixed;\n  top: 50%;\n  margin: 0 8%;\n\n  ${MEDIA_QUERY_LG} {\n    display: none;\n  }\n`;\n\nconst IntroBadge = styled.h5`\n  margin: 10px 0;\n  font-family: \"Montserrat\", sans-serif;\n  color: #d1d1d1;\n`;\nconst AuthorName = styled.div`\n  color: #222222;\n  font-size: 18px;\n  font-weight: bold;\n  font-family: \"Archivo Black\", sans-serif;\n`;\n\nconst AuthorDesc = styled.p`\n  width: 150px;\n  color: #525252;\n  font-size: 14px;\n  overflow-wrap: break-word;\n\n  a {\n    color: #525252;\n    text-decoration: underline;\n  }\n`;\n\nconst AvatarWrapper = styled.div`\n  width: 150px;\n  margin: 0 auto;\n\n  img {\n    width: 50%;\n    object-fit: cover;\n  }\n`;\n\nexport default function Intro() {\n  return (\n    <IntroWrapper>\n      <AvatarWrapper>\n        <img src=\"images/avatar.png\" alt=\"\" />\n      </AvatarWrapper>\n      <IntroBadge>ABOUT</IntroBadge>\n      <AuthorName>Lidemy</AuthorName>\n      <AuthorDesc>\n        一個為初學者而生的線上程式課程平台\n        <a href=\"https://lidemy.com/\">https://lidemy.com/</a>\n      </AuthorDesc>\n    </IntroWrapper>\n  );\n}\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { timeConverter } from \"../utills\";\nimport { MEDIA_QUERY_MD, MEDIA_QUERY_LG } from \"../constants/style\";\n\nconst PostWrapper = styled.div`\n  border-bottom: 1px solid #eeeeee;\n  margin-bottom: 20px;\n  padding: 25px 0;\n`;\n\nconst PostInfoTitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 0;\n  align-items: center;\n\n  ${MEDIA_QUERY_LG} {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst PostTitle = styled(Link)`\n  margin: 5px 0;\n  color: #212121;\n  font-size: 32px;\n  font-weight: bold;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.1em;\n  text-decoration: none;\n`;\n\nconst RelatedPostTitle = styled(Link)`\n  margin: 5px 0;\n  color: #212121;\n  font-size: 20px;\n  font-weight: bold;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.1em;\n  text-decoration: none;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nconst PostContent = styled.p`\n  color: #212121;\n  font-size: 22px;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.05em;\n  line-height: 1.5;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`;\n\nconst PostInfoTitle = styled.h2`\n  margin: 10px 0;\n  color: #212121;\n  font-size: 32px;\n  font-weight: bold;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.1em;\n`;\n\nconst PostAuthor = styled(Link)`\n  margin: 10px 0;\n  border: 1px solid #212121;\n  border-radius: 4px;\n  padding: 2px 5px;\n  color: #212121;\n  font-size: 14px;\n  font-family: \"微軟正黑體\";\n  text-decoration: none;\n`;\n\nconst PostBody = styled.p`\n  color: #212121;\n  font-size: 22px;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.05em;\n  line-height: 1.5;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n`;\n\nconst PostDate = styled.h5`\n  margin: 5px 0;\n  color: #d1d1d1;\n  font-size: 16px;\n  font-family: \"Montserrat\", sans-serif;\n`;\n\nconst BtnReadMore = styled(Link)`\n  color: #1a8917;\n  font-size: 14px;\n  font-family: \"Montserrat\", sans-serif;\n  text-decoration: none;\n`;\n\nconst RelatedPostWrapper = styled.div`\n  border: 1px solid #d1d1d1;\n  background: #fcfcfc;\n  border-radius: 10px;\n  padding: 20px;\n  width: 25%;\n  transition: all 0.3s ease-in;\n\n  &:hover {\n    transform: scale(1.04);\n  }\n\n  & + & {\n    margin-left: 20px;\n  }\n\n  ${MEDIA_QUERY_MD} {\n    width: 80%;\n    margin-bottom: 20px;\n\n    & + & {\n      margin-left: 0px;\n    }\n  }\n`;\n\nconst RelatedPostNum = styled.span`\n  font-size: 16px;\n  color: #212121;\n  letter-spacing: 0.1em;\n`;\n\nconst ArchiveContent = styled.p`\n  color: #212121;\n  font-size: 22px;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.05em;\n  line-height: 1.5;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nexport const RelatedTitle = styled.h4`\n  margin: 10px 0;\n  border-radius: 4px;\n  padding: 2px 5px;\n  color: #212121;\n  font-size: 20px;\n  font-family: \"微軟正黑體\";\n`;\n\nexport const ArchiveTitle = styled.h3`\n  margin: 20px 0;\n  padding: 10px 0;\n  color: #818181;\n  font-size: 28px;\n  text-decoration: underline;\n  font-family: \"微軟正黑體\";\n`;\nexport const HomePageRoot = styled.div``;\n\nexport const HomeWrapper = styled.div`\n  margin: 0 auto;\n  width: 50%;\n\n  ${MEDIA_QUERY_LG} {\n    width: 80%;\n  }\n`;\n\nexport const RelatedWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  padding-bottom: 10vh;\n\n  ${MEDIA_QUERY_MD} {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst BtnDelete = styled.button`\n  margin: 5px;\n  border: 0.8px solid #cccccc;\n  border-radius: 3px;\n  padding: 3px 6px;\n  font-size: 12px;\n  letter-spacing: 1px;\n  color: #666666;\n  background: white;\n  text-decoration: none;\n  transition: ease-in 0.2s;\n  cursor: pointer;\n\n  &:hover {\n    background: crimson;\n    color: white;\n    border: none;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst BtnEdit = styled(Link)`\n  margin: 5px;\n  border: 0.8px solid #cccccc;\n  border-radius: 3px;\n  padding: 3px 6px;\n  font-size: 12px;\n  letter-spacing: 1px;\n  color: #666666;\n  background: white;\n  text-decoration: none;\n  transition: ease-in 0.2s;\n  cursor: pointer;\n\n  &:hover {\n    background: #03a87c;\n    color: white;\n    border: none;\n  }\n`;\n\nexport function Post({ post }) {\n  const date = timeConverter(post.createdAt);\n  return (\n    <PostWrapper>\n      <PostDate>{date}</PostDate>\n      <PostTitle to={`/article/${post.id}`}>{post.title}</PostTitle>\n      <PostContent>{post.body}</PostContent>\n      <BtnReadMore to={`/article/${post.id}`}>Read more</BtnReadMore>\n    </PostWrapper>\n  );\n}\n\nexport function PostInfo({ post, handleDeletePost }) {\n  const date = timeConverter(post.createdAt);\n  const handleDeleteClick = () => {\n    handleDeletePost(post.id);\n  };\n  return (\n    <PostWrapper>\n      <PostDate>{date}</PostDate>\n      <PostInfoTitleWrapper>\n        <PostInfoTitle>{post.title}</PostInfoTitle>\n        <div>\n          <BtnDelete onClick={handleDeleteClick}>刪除</BtnDelete>\n          <BtnEdit to={`/post/${post.id}`}>修改</BtnEdit>\n        </div>\n      </PostInfoTitleWrapper>\n      {post.user.nickname && post.userId && (\n        <PostAuthor to={`/user/${post.userId}`}>\n          {post.user.nickname}\n        </PostAuthor>\n      )}\n      <PostBody>{post.body}</PostBody>\n    </PostWrapper>\n  );\n}\n\nexport function RelatedPost({ order, post }) {\n  const date = timeConverter(post.createdAt);\n  return (\n    <RelatedPostWrapper>\n      <RelatedPostNum>#{order}</RelatedPostNum>\n      <RelatedPostTitle to={`/article/${post.id}`}>\n        {post.title}\n      </RelatedPostTitle>\n      <PostDate>{date}</PostDate>\n    </RelatedPostWrapper>\n  );\n}\n\nexport function ArchiveItem({ post }) {\n  const date = timeConverter(post.createdAt);\n  return (\n    <PostWrapper>\n      <PostTitle to={`/article/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{date}</PostDate>\n      <ArchiveContent>{post.body}</ArchiveContent>\n    </PostWrapper>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nPostInfo.propTypes = {\n  post: PropTypes.object,\n  handleDeletePost: PropTypes.func,\n};\n\nRelatedPost.propTypes = {\n  post: PropTypes.object,\n  order: PropTypes.number,\n};\n\nArchiveItem.propTypes = {\n  post: PropTypes.object,\n};\n","import { useEffect } from \"react\";\nimport { getPosts } from \"../../redux/reducers/postsReducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Intro from \"../../components/Intro\";\nimport { HomePageRoot, HomeWrapper, Post } from \"../../components/Home\";\n\nfunction HomePage() {\n  const dispatch = useDispatch();\n  const posts = useSelector((store) => store.posts.allPosts);\n\n  // init\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n\n  return (\n    <HomePageRoot>\n      <Intro />\n      <HomeWrapper>\n        {posts && posts.map((post) => <Post key={post.id} post={post} />)}\n      </HomeWrapper>\n    </HomePageRoot>\n  );\n}\n\nexport default HomePage;\n","import styled from \"styled-components\";\n\nexport const AboutWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 10vh auto;\n  padding: 20px;\n  width: 60%;\n`;\n\nexport const AboutBadge = styled.h5`\n  margin: 10px 0;\n  font-family: \"Montserrat\", sans-serif;\n  color: #d1d1d1;\n`;\n\nexport const AboutTitle = styled.div`\n  color: #222222;\n  font-size: 30px;\n  font-weight: bold;\n  font-family: \"Archivo Black\", sans-serif;\n`;\n\nexport const AboutDesc = styled.p`\n  color: #525252;\n  font-size: 16px;\n  overflow-wrap: break-word;\n\n  a {\n    color: #525252;\n    text-decoration: underline;\n  }\n  span {\n    color: #ca4141;\n  }\n`;\n\nexport const AboutAvatarWrapper = styled.div`\n  width: 150px;\n  margin: 30px;\n\n  img {\n    width: 100%;\n    object-fit: cover;\n  }\n`;\n","import {\n  AboutWrapper,\n  AboutAvatarWrapper,\n  AboutBadge,\n  AboutTitle,\n  AboutDesc,\n} from \"../../components/About\";\n\nfunction AboutPage() {\n  return (\n    <AboutWrapper>\n      <AboutAvatarWrapper>\n        <img src=\"images/avatar.png\" alt=\"\" />\n      </AboutAvatarWrapper>\n      <div>\n        <AboutBadge>ABOUT</AboutBadge>\n        <AboutTitle>第四期程式導師計畫</AboutTitle>\n        <AboutDesc>\n          不喊口號也不誇大成效，開放透明的 <span>網頁前後端線上學習計畫</span>\n          <br />\n          試著用六個月的時間，培養出一個找得到工作且基礎紮實的網頁工程師\n          <br />\n          <a href=\"https://bootcamp.lidemy.com/index.html\">\n            https://bootcamp.lidemy.com\n          </a>\n        </AboutDesc>\n      </div>\n    </AboutWrapper>\n  );\n}\n\nexport default AboutPage;\n","const ERRMESSAGE = {\n  BLANK_ARTICLE: \"Please fill in the blank for your article.\",\n  BLANK_USER_INFO: \"Please fill in the blank input box.\",\n};\n\nexport default ERRMESSAGE;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const LoginPageRoot = styled.div`\n  text-align: center;\n`;\n\nexport const LoginTitle = styled.h2`\n  font-size: 32px;\n  font-weight: bold;\n  color: #222222;\n`;\n\nexport const LoginDesc = styled.p`\n  font-size: 20px;\n  color: #222222;\n`;\n\nexport const LoginWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const LoginInputHint = styled.h6`\n  margin: 10px 0;\n  font-size: 14px;\n  font-weight: 300;\n  color: ${(props) => (props.verify ? \"#ca3e47\" : \"#222222\")};\n`;\n\nexport const LoginInput = styled.input`\n  margin-bottom: 20px;\n  border: none;\n  border-bottom: 1px solid ${(props) => (props.verify ? \"#ca3e47\" : \"#222222\")};\n  padding: 10px;\n  width: 20%;\n\n  &:focus {\n    outline: none;\n  }\n`;\nexport const ErrorMessage = styled.h5`\n  font-size: 16px;\n  color: #ca3e47;\n`;\n\nexport const BtnLogin = styled.button`\n  border: none;\n  background: #212121;\n  text-decoration: none;\n  margin: 20px 0;\n  padding: 8px 15px;\n  border-radius: 4px;\n  transition: all 0.3s ease-in-out;\n  cursor: pointer;\n  color: white;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\nexport const BtnBackToHome = styled(Link)`\n  color: #1a8917;\n  font-size: 14px;\n  font-family: \"Montserrat\", sans-serif;\n  text-decoration: none;\n`;\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { setLogin, setLoginInfo } from \"../../redux/reducers/userReducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAuthToken } from \"../../utills\";\nimport ERRMESSAGE from \"../../constants/errorMessage\";\nimport {\n  LoginPageRoot,\n  LoginTitle,\n  LoginDesc,\n  ErrorMessage,\n  LoginWrapper,\n  LoginInputHint,\n  LoginInput,\n  BtnLogin,\n  BtnBackToHome,\n} from \"../../components/Login\";\n\nfunction LoginPage() {\n  // UI state\n  const [username, setUsername] = useState(\"zoeaeen13\");\n  const [password, setPassword] = useState(\"Lidemy\");\n  const [isClicked, setClicked] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isLogin = useSelector((store) => store.user.isLogin);\n\n  // init\n  useEffect(() => {\n    if (isLogin) {\n      history.push(\"/\");\n    }\n  }, [isLogin, history]);\n\n  const handleInputChange = (e) => {\n    setErrorMessage(null);\n    if (e.target.name === \"account\") {\n      setUsername(e.target.value);\n    }\n\n    if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    }\n  };\n\n  const handleButtonClick = () => {\n    setClicked(true);\n    setErrorMessage(null);\n    if (!username || !password) {\n      return setErrorMessage(ERRMESSAGE.BLANK_USER_INFO);\n    }\n\n    dispatch(setLogin(username, password)).then((res) => {\n      if (!res.ok) {\n        return setErrorMessage(res.message);\n      }\n      if (getAuthToken()) {\n        dispatch(setLoginInfo()).then((res) => {\n          if (!res.ok) {\n            return setErrorMessage(res.message);\n          }\n        });\n      }\n    });\n  };\n\n  return (\n    <LoginPageRoot>\n      <LoginTitle>Sign in with Account</LoginTitle>\n      <LoginDesc>Enter the account and password.</LoginDesc>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      <LoginWrapper>\n        <LoginInputHint verify={isClicked && !username}>\n          Your account\n        </LoginInputHint>\n        <LoginInput\n          name=\"account\"\n          type=\"text\"\n          value={username}\n          onChange={handleInputChange}\n          verify={isClicked && !username}\n        />\n        <LoginInputHint verify={isClicked && !password}>\n          Your password\n        </LoginInputHint>\n        <LoginInput\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          onChange={handleInputChange}\n          verify={isClicked && !password}\n        />\n        <BtnLogin onClick={handleButtonClick}>Continue</BtnLogin>\n        <BtnBackToHome to=\"/\">back to Home</BtnBackToHome>\n      </LoginWrapper>\n    </LoginPageRoot>\n  );\n}\n\nexport default LoginPage;\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ERRMESSAGE from \"../../constants/errorMessage\";\nimport { setRegister, setLoginInfo } from \"../../redux/reducers/userReducer\";\nimport { getAuthToken } from \"../../utills\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  LoginPageRoot,\n  LoginTitle,\n  LoginDesc,\n  ErrorMessage,\n  LoginWrapper,\n  LoginInputHint,\n  LoginInput,\n  BtnLogin,\n} from \"../../components/Login\";\n\nfunction RegisterPage() {\n  // UI state\n  const [username, setUsername] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const password = \"Lidemy\";\n  const [isClicked, setClicked] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isLogin = useSelector((store) => store.user.isLogin);\n\n  // init\n  useEffect(() => {\n    if (isLogin) {\n      history.push(\"/\");\n    }\n  }, [isLogin, history]);\n\n  const handleInputChange = (e) => {\n    setErrorMessage(null);\n    if (e.target.name === \"username\") {\n      setUsername(e.target.value);\n    }\n\n    if (e.target.name === \"nickname\") {\n      setNickname(e.target.value);\n    }\n  };\n\n  const handleButtonClick = () => {\n    setClicked(true);\n    setErrorMessage(null);\n    if (!username || !nickname) {\n      return setErrorMessage(ERRMESSAGE.BLANK_USER_INFO);\n    }\n\n    dispatch(setRegister(nickname, username, password)).then((res) => {\n      if (!res.ok) {\n        return setErrorMessage(res.message);\n      }\n      if (getAuthToken()) {\n        dispatch(setLoginInfo()).then((res) => {\n          if (!res.ok) {\n            return setErrorMessage(res.message);\n          }\n        });\n      }\n    });\n  };\n\n  return (\n    <LoginPageRoot>\n      <LoginTitle>Create a new account</LoginTitle>\n      <LoginDesc>Enter the your nickname and username.</LoginDesc>\n      <LoginDesc>\n        For testing, the password is set as default value 'Lidemy'.\n      </LoginDesc>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      <LoginWrapper>\n        <LoginInputHint verify={isClicked && !nickname}>\n          Your nickname\n        </LoginInputHint>\n        <LoginInput\n          name=\"nickname\"\n          type=\"text\"\n          value={nickname}\n          onChange={handleInputChange}\n          verify={isClicked && !nickname}\n        />\n        <LoginInputHint verify={isClicked && !username}>\n          Your username\n        </LoginInputHint>\n        <LoginInput\n          name=\"username\"\n          type=\"text\"\n          value={username}\n          onChange={handleInputChange}\n          verify={isClicked && !username}\n        />\n        <LoginInputHint>Your password</LoginInputHint>\n        <LoginInput name=\"password\" type=\"password\" value={password} readonly />\n        <BtnLogin onClick={handleButtonClick}>Continue</BtnLogin>\n      </LoginWrapper>\n    </LoginPageRoot>\n  );\n}\n\nexport default RegisterPage;\n","import styled from \"styled-components\";\nimport { MEDIA_QUERY_LG } from \"../constants/style\";\n\nexport const NewPostForm = styled.form`\n  position: relative;\n`;\n\nexport const NewPostWrapper = styled.div`\n  text-align: center;\n  margin: 6vh auto;\n  border: none;\n  overflow: hidden;\n  border-radius: 2px;\n  box-sizing: border-box;\n  width: 60%;\n\n  ${MEDIA_QUERY_LG} {\n    width: 90%;\n  }\n`;\n\nexport const InputPostTitle = styled.input`\n  font-weight: bold;\n  font-size: 30px;\n  letter-spacing: 1px;\n  margin: 20px auto;\n  box-sizing: border-box;\n  border: none;\n  padding: 5px;\n  color: #292929;\n  width: 80%;\n\n  &:focus {\n    outline: none;\n  }\n`;\nexport const InputPostContent = styled.textarea`\n  margin: 20px auto;\n  color: #292929;\n  width: 80%;\n  border: 1px solid #d1d1d1;\n  border-radius: 5px;\n  font-size: 18px;\n  letter-spacing: 1px;\n  padding: 20px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const ErrorMessage = styled.h5`\n  font-size: 16px;\n  color: #ca3e47;\n`;\n\nexport const BtnPublish = styled.button`\n  position: absolute;\n  top: 0;\n  right: 50px;\n  margin: 20px 10px;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 14px;\n  font-size: 13px;\n  font-weight: bold;\n  background: #03a87c;\n  color: white;\n  cursor: pointer;\n  text-decoration: none;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover {\n    filter: brightness(1.1);\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  createNewPost,\n  getRecentPost,\n  clearPostPage,\n  setPostEdited,\n} from \"../../redux/reducers/postsReducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ERRMESSAGE from \"../../constants/errorMessage\";\nimport {\n  NewPostForm,\n  NewPostWrapper,\n  InputPostTitle,\n  InputPostContent,\n  ErrorMessage,\n  BtnPublish,\n} from \"../../components/NewPost\";\n\nfunction NewPostPage() {\n  let { slug } = useParams();\n  console.log(\"slug\", slug);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const recentPost = useSelector((store) => store.posts.recentPost);\n\n  // UI state\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // init\n  useEffect(() => {\n    if (slug) {\n      dispatch(getRecentPost(slug));\n    }\n\n    return () => {\n      dispatch(clearPostPage());\n    };\n  }, [slug, dispatch]);\n\n  // default value\n  useEffect(() => {\n    if (recentPost && slug) {\n      setTitle(recentPost.title);\n      setContent(recentPost.body);\n    }\n  }, [slug, recentPost]);\n\n  const handleInputChange = (e) => {\n    setErrorMessage(null);\n    if (e.target.name === \"title\") {\n      setTitle(e.target.value);\n    }\n\n    if (e.target.name === \"content\") {\n      setContent(e.target.value);\n    }\n  };\n\n  const handleSubmitPost = (e) => {\n    e.preventDefault();\n    if (!title || !content) {\n      return setErrorMessage(ERRMESSAGE.BLANK_ARTICLE);\n    }\n    if (slug) {\n      dispatch(setPostEdited(slug, title, content)).then((res) => {\n        if (!res.id) {\n          return setErrorMessage(res.message);\n        }\n        history.push(\"/\");\n      });\n    } else {\n      dispatch(createNewPost(title, content)).then((res) => {\n        if (!res.id) {\n          return setErrorMessage(res.message);\n        }\n        history.push(\"/\");\n      });\n    }\n  };\n\n  return (\n    <NewPostForm onSubmit={handleSubmitPost}>\n      <NewPostWrapper>\n        <InputPostTitle\n          name=\"title\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={handleInputChange}\n        />\n        <InputPostContent\n          name=\"content\"\n          placeholder=\"Write a story...\"\n          rows=\"10\"\n          cols=\"50\"\n          value={content}\n          onChange={handleInputChange}\n        ></InputPostContent>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </NewPostWrapper>\n      <BtnPublish>Publish</BtnPublish>\n    </NewPostForm>\n  );\n}\n\nexport default NewPostPage;\n","import { useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  getRecentPost,\n  getRelatedPosts,\n  setPostDeleted,\n  clearPostPage,\n} from \"../../redux/reducers/postsReducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Intro from \"../../components/Intro\";\nimport {\n  HomePageRoot,\n  HomeWrapper,\n  PostInfo,\n  RelatedPost,\n  RelatedWrapper,\n  RelatedTitle,\n} from \"../../components/Home\";\n\nfunction PostPage() {\n  let { slug } = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const recentPost = useSelector((store) => store.posts.recentPost);\n  const relatedPosts = useSelector((store) => store.posts.relatedPosts);\n\n  // init\n  useEffect(() => {\n    dispatch(getRecentPost(slug));\n    return () => {\n      dispatch(clearPostPage());\n    };\n  }, [slug, dispatch]);\n\n  useEffect(() => {\n    if (recentPost) {\n      dispatch(getRelatedPosts(recentPost.user.id, Number(slug)));\n    }\n  }, [slug, recentPost, dispatch]);\n\n  const handleDeletePost = (id) => {\n    dispatch(setPostDeleted(id)).then((statusCode) => {\n      if (statusCode === 200) {\n        history.push(\"/\");\n      }\n    });\n  };\n\n  return (\n    <HomePageRoot>\n      <Intro />\n      <HomeWrapper>\n        {recentPost && (\n          <PostInfo post={recentPost} handleDeletePost={handleDeletePost} />\n        )}\n        <RelatedTitle>同系列文章還有...</RelatedTitle>\n        <RelatedWrapper>\n          {relatedPosts &&\n            relatedPosts.map((post, index) => (\n              <RelatedPost key={post.id} order={index + 1} post={post} />\n            ))}\n          {!relatedPosts && <div>no related posts</div>}\n        </RelatedWrapper>\n      </HomeWrapper>\n    </HomePageRoot>\n  );\n}\n\nexport default PostPage;\n","import styled from \"styled-components\";\n\nconst PaginationWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n  width: 80%;\n  backgroudn: red;\n`;\n\nconst CurrentPage = styled.h5`\n  color: #212121;\n  font-size: 18px;\n  font-weight: bold;\n  font-family: \"微軟正黑體\";\n  letter-spacing: 0.1em;\n  color: #818181;\n`;\n\nconst ArrowWrapper = styled.button`\n  width: 40px;\n  border: none;\n  background: transparent;\n  transition: 0.2s all ease-in;\n  cursor: pointer;\n  margin: 0 10px;\n\n  img {\n    width: 100%;\n    object-fit: cover;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover {\n    transform: scale(1.3);\n  }\n`;\n\nexport default function Pagination({ current, total, handleChangePage }) {\n  const handleNextPage = () => {\n    handleChangePage(current + 1);\n  };\n\n  const handlePreviouspage = () => {\n    handleChangePage(current - 1);\n  };\n\n  return (\n    <PaginationWrapper>\n      {current !== 1 && (\n        <ArrowWrapper onClick={handlePreviouspage}>\n          <img alt=\"\" src=\"./images/left-arrow.png\" />\n        </ArrowWrapper>\n      )}\n      <CurrentPage>目前第 {current} 頁</CurrentPage>\n      {current !== total && (\n        <ArrowWrapper onClick={handleNextPage}>\n          <img alt=\"\" src=\"./images/right-arrow.png\" />\n        </ArrowWrapper>\n      )}\n    </PaginationWrapper>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { getPosts, getUserPostsById } from \"../../redux/reducers/postsReducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Intro from \"../../components/Intro\";\nimport Pagination from \"../../components/Pagination\";\nimport {\n  HomePageRoot,\n  HomeWrapper,\n  ArchiveItem,\n  ArchiveTitle,\n} from \"../../components/Home\";\n\nfunction ArchivePage() {\n  let { slug } = useParams();\n  const dispatch = useDispatch();\n  const archivePosts = useSelector((store) => store.posts.allPosts);\n  const userPosts = useSelector((store) => {\n    if (store.posts.userPostsData) {\n      return store.posts.userPostsData.posts;\n    }\n  });\n  const userData = useSelector((store) => {\n    if (store.posts.userPostsData) {\n      return store.posts.userPostsData.author;\n    }\n  });\n\n  // ui state\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPage, setTotalPage] = useState(0);\n  const [recentPosts, setRecentPosts] = useState([]);\n\n  // init\n  useEffect(() => {\n    if (slug) {\n      dispatch(getUserPostsById(slug));\n    } else {\n      dispatch(getPosts());\n    }\n  }, [slug, dispatch]);\n\n  // set archive pagination\n  useEffect(() => {\n    if (archivePosts) {\n      if (archivePosts.length > 0) {\n        let quotient = Math.ceil(archivePosts.length / 5);\n        if (!archivePosts.length % 5) {\n          quotient += 1;\n        }\n        setCurrentPage(1);\n        setTotalPage(quotient);\n      }\n    }\n  }, [archivePosts]);\n\n  // change pages\n  useEffect(() => {\n    if (archivePosts) {\n      const index = (currentPage - 1) * 5;\n      setRecentPosts(archivePosts.slice(index, index + 5));\n    }\n  }, [archivePosts, currentPage]);\n\n  const handleChangePage = (page) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <HomePageRoot>\n      <Intro />\n      <HomeWrapper>\n        {!slug && <ArchiveTitle>所有文章</ArchiveTitle>}\n        {slug && userData && (\n          <ArchiveTitle>\n            '{userData.nickname}' 目前發表了 {userData.postsNum} 篇文章\n          </ArchiveTitle>\n        )}\n        {!slug &&\n          recentPosts &&\n          recentPosts.map((post) => <ArchiveItem key={post.id} post={post} />)}\n        {slug &&\n          userPosts &&\n          userPosts.map((post) => <ArchiveItem key={post.id} post={post} />)}\n        {!slug && recentPosts && totalPage && (\n          <Pagination\n            current={currentPage}\n            total={totalPage}\n            handleChangePage={handleChangePage}\n          />\n        )}\n      </HomeWrapper>\n    </HomePageRoot>\n  );\n}\n\nexport default ArchivePage;\n","import { useEffect } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport HomePage from \"../pages/Home\";\nimport AboutPage from \"../pages/About\";\nimport LoginPage from \"../pages/Login\";\nimport RegisterPage from \"../pages/Register\";\nimport NewPostPage from \"../pages/NewPost\";\nimport PostPage from \"../pages/Post\";\nimport ArchivePage from \"../pages/Archive\";\nimport { setLoginInfo } from \"../redux/reducers/userReducer\";\nimport { useDispatch } from \"react-redux\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setLoginInfo());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/about\">\n            <AboutPage />\n          </Route>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterPage />\n          </Route>\n          <Route path=\"/post/:slug\">\n            <NewPostPage />\n          </Route>\n          <Route path=\"/post/\">\n            <NewPostPage />\n          </Route>\n          <Route path=\"/archive\">\n            <ArchivePage />\n          </Route>\n          <Route path=\"/article/:slug\">\n            <PostPage />\n          </Route>\n          <Route path=\"/user/:slug\">\n            <ArchivePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport postsReducer from \"./reducers/postsReducer\";\nimport userReducer from \"./reducers/userReducer\";\n\nexport default configureStore({\n  reducer: {\n    posts: postsReducer,\n    user: userReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  // store\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}